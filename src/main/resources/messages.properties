# Message resources 
# DO NOT USE DOT NOTATION

# ------ informational messages -------
appTitle=UCM
appFullTitle=Use Case Manager
sidebarTitle=Project Explorer

# -- Warnings --

# -- Standard Errors --
header=<ul>
prefix=<li class="error">
suffix=</li>
footer=</ul>

# --  Error Messages --
required={0} is required.
minlength={0} can not be less than {1} characters.
maxlength={0} can not be greater than {1} characters.
invalid={0} is invalid.
date={0} is not a date.
range={0} is not in the range {1} through {2}.
creditcard={0} is an invalid credit card number.
email={0} is not a valid email address. Must include name@domain.
duplicateEmail=This email address ({0}) already exists for this CP  - Ignoring.
permission=User {0} does not have permission to {1} this document.
nonSelected=Please select a {0}. 
nothingFound=There were no {0} found that match your search criteria.
freeform={0}
registration_registered=You have been successfully registered as the user {0}! You may now login.
registration_invalid=Invalid registration. Please correct the errors and try again.
identity_loggedOut=You have successfully ended your session.
identity_loggedIn=You're signed in as {0}.
identity_loginFailed=Invalid username or password.

# info messages
welcomeHeader=Welcome to UCM
initialWelcome1=Software Requirements Capture Tool
initialWelcome2=Requirements Management with Use Cases

# footer 
siteOwner=For content questions, please contact <a href\='mailto\:luke.b.bishop@gmail.com?subject\=UCM' title\='For content questions, please email luke.b.bishop@gmail.com.'>UCM owner</a>. 

# -- formatting --
formatDate=M/d/yyyy h:mm a z
formatCurrency=$#,##0.00;$(#,##0.00)

# -- buttons --
buttonSubmit=Submit
buttonSaveAndSubmit=Save And Submit
buttonApply=Apply
buttonClose=Close
buttonCancel=Cancel
buttonConfirm=Confirm
buttonOk=OK
buttonReset=Reset
buttonSave=Save
buttonSearch=Search
buttonFind=Find
buttonBack=Back
buttonNext=Next
buttonCreate=Create
buttonFinish=Finish
buttonAddLineItem=Add New LineItem

# ---- survival test questions ----
survivalQuestion1=Does the project have clear, unambiguous vision statement or mission statement?
survivalQuestion2=Do all team members believe the vision is realistic?
survivalQuestion3=Does the project have a business case that details the business benefit and how the benefit will be measured?
survivalQuestion4=Does the project have a user interface prototype that realistically and vividly demonstrates the functionality that the actual system will have?
survivalQuestion5=Does the project have a detailed, written specification of what the software is supposed to do?
survivalQuestion6=Did the project team interview people who will actually use the software (end users) early in the project and continue to involve them throughout the project?
survivalQuestion7=Does the project have a detailed, written Software Development Plan?
survivalQuestion8=Does the project's task list include creation of an installation program, conversion of data from previous versions of the system, integration with third-party software, meetings with the customer, and other minor tasks?
survivalQuestion9=Were the schedule and budget estimates officially updated at the end of the most recently completed phase?
survivalQuestion10=Does the project have detailed, written architecture and design documents?
survivalQuestion11=Does the project have a detailed, written Quality Assurance Plan that requires design and code reviews in addition to system testing?
survivalQuestion12=Does the project have a detailed Staged Delivery Plan for the software, which describes the stages in which the software will be implemented and delivered?
survivalQuestion13=Does the project's plan include time for holidays, vacation days, sick days, and ongoing training, and are the resources allocated at less than 100 percent?
survivalQuestion14=Was the project plan, including the schedule, approved by the development team, the quality assurance team, and the technical writing team - in other words, the people responsible for doing the work?
survivalQuestion15=Has a single key executive who has decision-making authority been made responsible for the project, and does the project have that person's active support?
survivalQuestion16=Does the project manager's workload allow him or her to devote an adequate amount of time to the project?
survivalQuestion17=Does the project have well-defined, detailed (binary) milestones that are considered either 100 percent done or 100 percent not done?
survivalQuestion18=Can a project stakeholder easily find out which of these binary milestones have been completed?
survivalQuestion19=Does the project have a feedback channel by which project members can anonymously report problems to their own managers and upper managers?
survivalQuestion20=Does the project have a written plan for controlling changes to the software's specification?
survivalQuestion21=Does the project have a Change Control Board that has final authority to accept or reject proposed changes?
survivalQuestion22=Are the planning materials and status information for the project - including effort and schedule estimates, task assignments, and progress compared to the plan thus far - available to every team member?
survivalQuestion23=Is all the source code placed under automated revision control?
survivalQuestion24=Does the project environment include the basic tools needed to complete the project, including defect tracking software, source code control, and project management software?
survivalQuestion25=Does the project plan articulate a list of risks to the project? Has the list been updated recently?
survivalQuestion26=Does the project have a project risk officer who is responsible for identifying emerging risks to the project?
survivalQuestion27=If the project uses subcontractors, does it have a plan for managing each subcontract organization and a single person in charge of each one? (Give the project full score if it does not use subcontractors?
survivalQuestion28=Does the project team have all the technical expertise to complete the project?
survivalQuestion29=Does the project team have expertise with the business environment in which the software will operate?
survivalQuestion30=Does the project have a technical leader capable of leading the project successfully?
survivalQuestion31=Are there enough people to do all the work required?
survivalQuestion32=Does everyone work well together?
survivalQuestion33=Is each person committed to the project?


# navigation
backAction=Go to previous page
cancelAction=Cancel any form changes
actorComplexitySimple=Represents another system with a defined API
actorComplexityAverage=An interaction with another system through a protocol. 
actorComplexityComplex=Interacts through a Graphical User Interface.
useCaseComplexitySimple=Simple use interface. Touches only a single database entity. Basic flow has three steps or less. Its implementation involves less than five classes. 
useCaseComplexityAverage=More interface design. Touches two or more database entities. Between four and seven steps. Its implementation involves between five and 10 classes.
useCaseComplexityComplex=Complex user interface or processing. Touches three or more database entities. More than seven steps. Its implementation involves more than 10 classes. 
